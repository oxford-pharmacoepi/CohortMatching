) %>%
dplyr::filter(
index_date >= observation_period_start_date,
index_date <= observation_period_end_date
) %>%
dplyr::select("cases_id","controls_id","gender_concept_id","year_of_birth")
matches
usethis::use_r("exactMatchingCohort")
usethis::use_pipe()
usethis::use_package("dplyr")
devtools::load_all()
devtools::check()
usethis::use_package("dbplyr")
devtools::load_all()
devtools::check()
cdm$person %>%
dplyr::select(.data$person_id, all_of(.env$matchCols)) %>%
dplyr::right_join(
cdm$cases %>%
dplyr::select(person_id = .data$subject_id),
by = "person_id"
) %>%
dplyr::rename(cases_id = .data$person_id)
devtools::load_all()
devtools::check()
usethis::use_package("rlang")
devtools::load_all()
devtools::check()
usethis::use_import_from("rlang", c(".data", ".env"))
devtools::load_all()
devtools::check()
.env$cdm
library(DrugUtilisation)
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE)
# Cases
cases <- .env$cdm$person %>%
dplyr::select(person_id, all_of(.env$matchCols)) %>%
dplyr::right_join(
cdm$cases %>%
dplyr::select(person_id = .data$subject_id),
by = "person_id"
) %>%
dplyr::rename(cases_id = .data$person_id)
.env$cdm$person
.env$cdm$.data$person
cdm$person %>%
dplyr::select(person_id, all_of(.env$matchCols))
cdm$person %>%
dplyr::select(person_id, all_of(.env$matchCols)) %>%
dplyr::right_join(
cdm$cases %>%
dplyr::select(person_id = .data$subject_id),
by = "person_id"
)
# Cases
cases <- cdm$person %>%
dplyr::select(person_id, all_of(.env$matchCols)) %>%
dplyr::right_join(
cdm$cases %>%
dplyr::select(person_id = .data$subject_id),
by = "person_id"
) %>%
dplyr::rename(cases_id = .data$person_id)
help(row_number())
help(row_number)
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::check()
help(all_of)
devtools::check()
devtools::check()
devtools::load_all()
devtools::check()
library(DrugUtilisation)
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE)
exactMatchingCohort(cdm, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
rlang::last_trace()
devtools::load_all()
exactMatchingCohort(cdm, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
rlang::last_trace()
library(DrugUtilisation)
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE)
matchCols <- c()
if(matchSex){
matchCols <- append(matchCols, "gender_concept_id")
}
if(matchYearBirth){
matchCols <- append(matchCols, "year_of_birth")
}
# Cases
cases <- cdm$person %>%
dplyr::select(.data$person_id, dplyr::all_of(.env$matchCols)) %>%
dplyr::right_join(
cdm$cases %>%
dplyr::select(person_id = .data$subject_id),
by = "person_id"
) %>%
dplyr::rename(cases_id = .data$person_id)
# Controls
controls <- cdm$person %>%
dplyr::select(.data$person_id, dplyr::all_of(.env$matchCols)) %>%
dplyr::anti_join(
cdm$cases %>%
dplyr::select(person_id = .data$subject_id),
by = "person_id"
) %>%
dplyr::rename(controls_id = .data$person_id)
# Matching - if there is more than one match, remove a row at random
cases1 <- cases %>%
dplyr::mutate(id = dbplyr::sql("random()")) %>%
dplyr::group_by(dplyr::across(.env$matchCols)) %>%
dbplyr::window_order(.data$id) %>%
dplyr::mutate(pair_id = dplyr::row_number()) %>%
dbplyr::window_order() %>%
dplyr::select(-.data$id)
# Matching - if there is more than one match, remove a row at random
cases1 <- cases %>%
dplyr::mutate(id = dbplyr::sql("random()")) %>%
dplyr::group_by(dplyr::across(.env$matchCols)) %>%
dbplyr::window_order(.data$id) %>%
dplyr::mutate(pair_id = dplyr::row_number()) %>%
dbplyr::window_order() %>%
dplyr::select(-id)
controls1 <- controls %>%
dplyr::mutate(id = dbplyr::sql("random()")) %>%
dplyr::group_by(dplyr::across(.env$matchCols)) %>%
dbplyr::window_order(.data$id) %>%
dplyr::mutate(pair_id = dplyr::row_number()) %>%
dbplyr::window_order() %>%
dplyr::select(-id)
matches <- cases1 %>%
dplyr::inner_join(controls1,
by = c("pair_id",.env$matchCols)) %>%
# Remove those pairs where the control individual was not in observation at index date
dplyr::left_join(
cdm$observation_period %>%
dplyr::select(controls_id = .data$person_id, .data$observation_period_start_date, .data$observation_period_end_date),
by = "controls_id"
) %>%
dplyr::left_join(
cdm$cases %>%
dplyr::select(cases_id = .data$subject_id, index_date = .data$cohort_start_date),
by = "cases_id"
) %>%
dplyr::filter(
.data$index_date >= .data$observation_period_start_date,
.data$index_date <= .data$observation_period_end_date
) %>%
dplyr::select(.data$cases_id, .data$controls_id, .data$gender_concept_id, .data$year_of_birth)
cases1 %>%
dplyr::inner_join(controls1,
by = c("pair_id",.env$matchCols))
cases1 %>%
dplyr::inner_join(controls1,
by = c(.data$pair_id,.env$matchCols))
cases1
cases1 %>%
dplyr::inner_join(controls1,
by = c(.data$pair_id,.env$matchCols))
cases1 %>%
dplyr::inner_join(controls1,
by = c(pair_id,dplyr::all_of(matchCols)))
cases1 %>%
dplyr::inner_join(controls1,
by = c("pair_id",dplyr::all_of(matchCols)))
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
devtools::load_all()
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
devtools::check()
devtools::load_all()
devtools::check()
usethis::use_package("checkmate")
usethis::use_package("glue")
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
devtools::load_all()
devtools::check()
help("attr")
cdm <- attr(cdm, "cdm_reference")
cdm
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
attr(cdm, "cdm_reference")
class(cdm)
class(cdm) == "cdm_reference"
devtools::load_all()
class(cdm) == "cdm_reference"
devtools::check()
devtools::load_all()
devtools::check()
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
cdm
library(DrugUtilisation)
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE)
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
exactMatchingCohort(cdm$person %>% tibble::as_tibble(),matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
devtools::load_all()
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE)
exactMatchingCohort(cdm$person %>% tibble::as_tibble(),matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
colnames(cdm)
cd
cdm
cdm %>% CDMConnector::assertTables()
cdm %>% CDMConnector::assert_tables()
cdm %>% CDMConnector::cdmName()
cdm %>% CDMConnector::in_schema()
cdm %>% CDMConnector::list_tables()
cdm %>% CDMConnector::listTables()
CDMConnector::listTables(cdm)
CDMConnector::list_tables(cdm)
cdm
cdm$Tables
summary(cdm)
CDMConnector::listTables(cdm,schema = "main")
CDMConnector::unique_table_name()
CDMConnector::names(cdm)
names(cdm)
# Check if cohort has person_id, observation_period, and cases tables
data_check <- any(names(cohort) %in% c("person_id", "observation_period", "cases"))
any(names(cdm) %in% c("person_id", "observation_period", "cases"))
any(names(cdm) %in% c("person_id", "observation_period1", "cases"))
names(cdm) %in%  c("person_id", "observation_period100", "cases")
cohort <- cdm
c("person_id", "observation_period", "cases") %in% names(cohort)
library(DrugUtilisation)
devtools::load_all()
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
exactMatchingCohort(cdm$person %>% tibble::as_tibble(),matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
devtools::load_all
devtools::load_all()
devtools::load_all()
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE)
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
devtools::load_all()
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
cohort <- cdm
any(class(cohort) == "cdm_reference")
c("person") %in% names(cohort)
c("observation_period") %in% names(cohort)
c("cases") %in% names(cohort)
"cases" %in% names(cohort)
cases_check <- "cases" %in% names(cohort)
checkmate::assertTRUE(data_check, add = errorMessage)
# ERROR MESSAGES ---------------------------------------------------------------
errorMessage <- checkmate::makeAssertCollection()
# Check cohort class
data_check   <- class(cohort) == "cdm_reference"
checkmate::assertTRUE(data_check, add = errorMessage)
if(!isTRUE(data_check)){
errorMessage$push(glue::glue("- {cohort} is not a cdm object"))
}
# Check if cohort has person_id, observation_period, and cases tables "cases"
person_check <- "person" %in% names(cohort)
checkmate::assertTRUE(person_check, add = errorMessage)
if(!isTRUE(person_check)){
errorMessage$push(glue::glue("- {cohort} has not table named 'person'"))
}
observation_period_check <- "observation_period" %in% names(cohort)
checkmate::assertTRUE(observation_period_check , add = errorMessage)
if(!isTRUE(observation_period_check)){
errorMessage$push(glue::glue("- {cohort} has not table named 'observation_period'"))
}
cases_check <- "cases" %in% names(cohort)
checkmate::assertTRUE(cases_check, add = errorMessage)
if(!isTRUE(cases_check)){
errorMessage$push(glue::glue("- {cohort} has not table named 'cases'"))
}
"cases" %in% names(cohort)
checkmate::assertTRUE(cases_check, add = errorMessage)
checkmate::reportAssertions(collection = errorMessage)
devtools::load_all()
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
devtools::load_all()
devtools::check()
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
devtools::load_all()
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
usethis::use_test()
usethis::use_testthat(3, TRUE)
usethis::use_package("DrugUtilisation", "Suggests")
devtools::load_all(".")
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(
cdm = cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE
)
exactMatchingCohort(cdm,matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1)
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
exactMatchingCohort(
cdm = cdm, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1
)
devtools::load_all(".")
exactMatchingCohort(
cdm = cdm, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1
)
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(
cdm = cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE
)
expect_no_error(exactMatchingCohort(
cdm = cdm, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1
))
cohort <- cdm$cases
attributes(cohort)
cdm
cdm <- attr(cohort, "cdm_reference")
dev_tools::load_all()
devtools::load_all()
devtools::check()
usethis::use_package("duckdb", "Suggests")
devtools::load_all()
devtools::check()
devtools::check()
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(
cdm = cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE
)
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1
))
test_check("CohortMatching")
usethis::use_test("exactMatchingCohort")
devtools::load_all()
test_check("CohortMatching")
library(testthat)
library(CohortMatching)
test_check("CohortMatching")
devtools::test_coverage()
detach("package::CohortMatching", unload = TRUE)
detach("package:CohortMatching", unload = TRUE)
devtools::test_coverage()
library(testthat)
library(CohortMatching)
test_check("CohortMatching")
library(CohortMatching)
library(CohortMatching)
library(CohortMatching)
test_check("CohortMatching")
devtools::load_all()
library(CohortMatching)
exactMatchingCohort(
cohort = cdm$cases, matchSex = FALSE, matchYearBirth = FALSE, matchPair = 1
)
devtools::load_all(".")
exactMatchingCohort(
cohort = cdm$cases, matchSex = FALSE, matchYearBirth = FALSE, matchPair = 1
)
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1
))
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(
cdm = cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE
)
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1
))
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = FALSE, matchYearBirth = TRUE, matchPair = 1
))
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = TRUE, matchYearBirth = FALSE, matchPair = 1
))
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = FALSE, matchYearBirth = FALSE, matchPair = 1
))
cdm$cases <- NULL
exactMatchingCohort(
cohort = cdm$cases, matchSex = FALSE, matchYearBirth = FALSE, matchPair = 1
)
cdm$cases <- cdm$cases |> dplyr::filter(subject_id == 0)
cdm$cases <- cdm$cases %>% dplyr::filter(subject_id == 0)
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(
cdm = cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE
)
cdm$cases <- cdm$cases %>% dplyr::filter(subject_id == 0)
cdm$cases
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1
))
expect_no_error(x <- exactMatchingCohort(
cohort = cdm$cases, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1
))
x
devtools::load_all()
cdm <- DrugUtilisation::mockDrugUtilisation(numberIndividuals = 200)
followback  <- 180
conceptSet_code <- list(asthma = 317009)
cdm <- DrugUtilisation::generateConceptCohortSet(
cdm = cdm,
conceptSet = conceptSet_code,
name = "cases",
end  = "observation_period_end_date",
requiredObservation = c(followback,followback),
overwrite = TRUE
)
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = TRUE, matchYearBirth = TRUE, matchPair = 1
))
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = FALSE, matchYearBirth = TRUE, matchPair = 1
))
expect_no_error(x- exactMatchingCohort(
cohort = cdm$cases, matchSex = TRUE, matchYearBirth = FALSE, matchPair = 1
))
expect_no_error(x <- exactMatchingCohort(
cohort = cdm$cases, matchSex = TRUE, matchYearBirth = FALSE, matchPair = 1
))
x
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = TRUE, matchYearBirth = FALSE, matchPair = 1
))
expect_no_error(exactMatchingCohort(
cohort = cdm$cases, matchSex = FALSE, matchYearBirth = FALSE, matchPair = 1
))
expect_no_error(x <- exactMatchingCohort(
cohort = cdm$cases, matchSex = FALSE, matchYearBirth = FALSE, matchPair = 1
))
x
expect_no_error(x <- exactMatchingCohort(
cohort = cdm$cases, matchSex = FALSE, matchYearBirth = FALSE, matchPair = 1
))
x
devtools::check()
devtools::load_all()
devtools::check()
